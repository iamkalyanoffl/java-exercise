  java exercise (week-3)
1. string tokenizer(directly calling it)
import java.util.StringTokenizer; //import the scanner
public class Main
{
	public static void main(String[] args)
	{
StringTokenizer myobj= new StringTokenizer("my name is khan","");
while(myobj.hasMoreTokens()){
System.out.println(myobj.nextToken());
}


   
   
		
	}
}

2. string tokenizer(call all modules in it)
import java.util.*; //import the scanner
public class Main
{
	public static void main(String[] args)
	{
StringTokenizer myobj= new StringTokenizer("my,name,is,khan");
while(myobj.hasMoreTokens()){
System.out.println(myobj.nextToken(","));
}


   
   
		
	}
}

3. string tokenizer(call all modules in it)
import java.util.*; //import the scanner
public class Main
{
	public static void main(String[] args)
	{
StringTokenizer myobj= new StringTokenizer("Demonstrating methods from String Tokenizer class"," ");
while(myobj.hasMoreTokens()){
System.out.println(myobj.nextToken());
}


   
   
		
	}
}

4. hasMoreElements
import java.util.*; //import the scanner
public class Main
{
	public static void main(String[] args)
	{
StringTokenizer myobj= new StringTokenizer("Demonstrating methods from String Tokenizer class"," ");
while(myobj.hasMoreElements()){
System.out.println(myobj.nextToken());
}


   
   
		
	}
}

5. nextElement()
import java.util.*; //import the scanner
public class Main
{
	public static void main(String[] args)
	{
StringTokenizer myobj= new StringTokenizer("Demonstrating methods from String Tokenizer class"," ");
while(myobj.hasMoreTokens()){
System.out.println(myobj.nextElement());
}


   
   
		
	}
}

6. countTokens()
import java.util.*; 
public class Main
{
	public static void main(String[] args)
	{
StringTokenizer myobj= new StringTokenizer("Demonstrating methods from String Tokenizer class"," ");
System.out.println(myobj.countTokens());



   
   
		
	}
}    

7. assigning array (initialize)
public class Main
{
	public static void main(String[] args)
	{
int arr[]= new int [5];
arr[0]=1;arr[1]=2;arr[2]=3;arr[3]=4;arr[4]=5;
for(int i=0;i<arr.length;i++){
System.out.println(arr[i]);
}



   
   
		
	}
}

8. dynamic memory addressing
class Student{
public int rno;
public String name;
Student(int rno,String name){
this.rno=rno;
this.name=name;
}

}






public class Main
{
	public static void main(String[] args)
	{
Student arr[];
arr=new Student[5];
arr[0]= new Student(1,"Kalyan");
arr[1]= new Student(2,"Cristiano");
arr[2]= new Student(3,"homelander");
arr[3]= new Student(4,"dr doom");
arr[4]= new Student(5,"pele");
for(int i=0;i<5;i++){
System.out.println("Element at "+i+":"+arr[i].rno+" "+arr[i].name);
}



    
   
		
	}
}


